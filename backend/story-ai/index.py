"""
Business: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö –∏—Å—Ç–æ—Ä–∏–π —á–µ—Ä–µ–∑ DeepSeek API
Args: event —Å httpMethod, body (game_data, user_action, history)
Returns: HTTP response —Å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π
"""

import json
import os
from typing import Dict, Any
import requests

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    try:
        method: str = event.get('httpMethod', 'POST')
        
        if method == 'OPTIONS':
            return {
                'statusCode': 200,
                'headers': {
                    'Access-Control-Allow-Origin': '*',
                    'Access-Control-Allow-Methods': 'POST, OPTIONS',
                    'Access-Control-Allow-Headers': 'Content-Type, X-User-Id',
                    'Access-Control-Max-Age': '86400'
                },
                'body': ''
            }
        
        if method != 'POST':
            return {
                'statusCode': 405,
                'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({'error': 'Method not allowed'})
            }
        
        body_data = json.loads(event.get('body', '{}'))
        
        game_settings = body_data.get('game_settings', {})
        user_action = body_data.get('user_action', '')
        history = body_data.get('history', [])
        
        genre = game_settings.get('genre', '—Ñ—ç–Ω—Ç–µ–∑–∏')
        characters = game_settings.get('characters', [])
        rating = game_settings.get('rating', '18+')
        tone = game_settings.get('tone', 3)
        world_setting = game_settings.get('world', '')
        
        tone_description = '–ø—Ä–æ—Å—Ç—ã–µ —Ñ—Ä–∞–∑—ã' if tone <= 2 else '—É–º–µ—Ä–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å' if tone <= 4 else '–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å'
        
        chars_str = ', '.join([c.get('name', '') for c in characters[:3]]) if characters else '–Ω–µ—Ç'
        
        system_prompt = f"""–ú–ê–°–¢–ï–† –ò–ì–†–´. –ñ–∞–Ω—Ä: {genre}, —Ä–µ–π—Ç–∏–Ω–≥: {rating}.
–°–µ—Ç—Ç–∏–Ω–≥: {world_setting if world_setting else genre}
–ü–µ—Ä—Å–æ–Ω–∞–∂–∏: {chars_str}

–ó–∞–¥–∞—á–∞: –Ø—Ä–∫–∞—è —Å—Ü–µ–Ω–∞ (800-1000 —Å–ª–æ–≤), –¥–∏–∞–ª–æ–≥–∏ –∂–∏–≤—ã–µ (–º–∞—Ç –æ–∫), NPC –∞–∫—Ç–∏–≤–Ω—ã, —Å—Ç–∏–ª—å {tone_description}.
–ü—Ä–∞–≤–∏–ª–æ: –ù–ï –¥–µ–π—Å—Ç–≤—É–π –∑–∞ –∏–≥—Ä–æ–∫–∞. –ú–∏—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä—ã.

–§–æ—Ä–º–∞—Ç:
**[–ú–ï–¢–ê]** ‚è∞ –í—Ä–µ–º—è/–º–µ—Å—Ç–æ üé¨ –°–æ–±—ã—Ç–∏—è üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è üß† –≠–º–æ—Ü–∏–∏ üîç –ò–Ω—Ñ–æ ‚öîÔ∏è –°–∏—Ç—É–∞—Ü–∏—è
---
[–ò–°–¢–û–†–ò–Ø 2-3 –∞–±–∑–∞—Ü–∞]
[–í—ã–±–æ—Ä –¥–ª—è –∏–≥—Ä–æ–∫–∞]"""
        
        messages = [{'role': 'system', 'content': system_prompt}]
        
        for entry in history[-10:]:
            messages.append({'role': 'user', 'content': entry.get('user', '')})
            messages.append({'role': 'assistant', 'content': entry.get('ai', '')})
        
        if user_action:
            messages.append({'role': 'user', 'content': f"–î–µ–π—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞: {user_action}"})
        else:
            messages.append({'role': 'user', 'content': "–ù–∞—á–Ω–∏ –∏–≥—Ä—É. –û–ø–∏—à–∏ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ü–µ–Ω—É."})
        
        api_key = os.environ.get('DEEPSEEK_API_KEY')
        
        if not api_key:
            return {
                'statusCode': 500,
                'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({'error': 'DeepSeek API key not configured'})
            }
        
        response = requests.post(
            'https://api.deepseek.com/v1/chat/completions',
            headers={
                'Authorization': f'Bearer {api_key}',
                'Content-Type': 'application/json'
            },
            json={
                'model': 'deepseek-chat',
                'messages': messages,
                'temperature': 0.75,
                'max_tokens': 800
            },
            timeout=30
        )
        
        if not response.ok:
            return {
                'statusCode': response.status_code,
                'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({'error': f'DeepSeek API error: {response.text}'})
            }
        
        result = response.json()
        story_text = result['choices'][0]['message']['content']
        
        return {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
            'isBase64Encoded': False,
            'body': json.dumps({'story': story_text})
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': f'Error: {str(e)}'})
        }