import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card } from '@/components/ui/card';
import { Slider } from '@/components/ui/slider';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

const CreateGame = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  
  const [gameName, setGameName] = useState('');
  const [setting, setSetting] = useState('');
  const [role, setRole] = useState<'author' | 'hero' | null>(null);
  const [narrativeMode, setNarrativeMode] = useState<'first' | 'third' | 'love-interest' | null>(null);
  const [playerCount, setPlayerCount] = useState(2);

  const generateRandomName = () => {
    const names = [
      '–¢–µ–Ω–∏ –ø—Ä–æ—à–ª–æ–≥–æ',
      '–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥',
      '–û—Ö–æ—Ç–∞ –Ω–∞ –¥—Ä–∞–∫–æ–Ω–∞',
      '–¢–∞–π–Ω—ã —Å—Ç–∞—Ä–æ–≥–æ –æ—Å–æ–±–Ω—è–∫–∞',
      '–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –æ–¥–∏—Å—Å–µ—è',
      '–ü—Ä–æ–∫–ª—è—Ç–∏–µ –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∞',
      '–ü—É—Ç—å —Å–∞–º—É—Ä–∞—è',
      '–ö–∏–±–µ—Ä-–ø–∞–Ω–∫ 2084',
      '–ü–∏—Ä–∞—Ç—ã –ö–∞—Ä–∏–±—Å–∫–æ–≥–æ –º–æ—Ä—è',
      '–í–µ–¥—å–º–∞–∫ –∏–∑ –†–∏–≤–∏–∏'
    ];
    setGameName(names[Math.floor(Math.random() * names.length)]);
  };

  const handleStart = () => {
    if (!gameName.trim()) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã',
        variant: 'destructive'
      });
      return;
    }

    if (!role) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å',
        variant: 'destructive'
      });
      return;
    }

    if (!narrativeMode) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è',
        variant: 'destructive'
      });
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
    const gameSettings = {
      name: gameName,
      setting,
      role,
      narrativeMode,
      playerCount,
      createdAt: new Date().toISOString()
    };

    localStorage.setItem('current-game-settings', JSON.stringify(gameSettings));
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∏–≥—Ä—É
    navigate('/story/new');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-primary/5 to-background p-4">
      <div className="max-w-4xl mx-auto py-8 space-y-6">
        <div className="text-center space-y-2">
          <h1 className="text-4xl font-bold tracking-tight">–°–û–ó–î–ê–ù–ò–ï –ò–ì–†–´</h1>
          <p className="text-muted-foreground">–ù–µ–π—Ä–æ—Å–µ—Ç—å –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ –≤–∞—à–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º –∏ —Å–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—é–∂–µ—Ç—ã, –≥–µ—Ä–æ–µ–≤, –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –¥–∏–∞–ª–æ–≥–∏</p>
        </div>

        {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã */}
        <Card className="p-6 space-y-3">
          <div className="flex items-center justify-between">
            <label className="text-sm font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã</label>
            <Button
              variant="ghost"
              size="sm"
              onClick={generateRandomName}
              className="gap-2 text-primary"
            >
              <Icon name="Sparkles" size={16} />
              –°–ª—É—á–∞–π–Ω–æ
            </Button>
          </div>
          <Input
            value={gameName}
            onChange={(e) => setGameName(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã"
            className="text-lg"
          />
        </Card>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç—Ç–∏–Ω–≥–∞ */}
        <Card className="p-6 space-y-3">
          <label className="text-sm font-medium">–û–ø–∏—à–∏—Ç–µ —Å–µ—Ç—Ç–∏–Ω–≥ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è</label>
          <Textarea
            value={setting}
            onChange={(e) => setSetting(e.target.value)}
            placeholder="–û–ø–∏—à–∏—Ç–µ –º–∏—Ä, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –Ω–∞—á–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é... –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∏–º–≤–æ–ª–∞–º!"
            className="min-h-[200px] resize-none"
          />
          <div className="flex justify-between items-center">
            <span className="text-xs text-muted-foreground">{setting.length} —Å–∏–º–≤–æ–ª–æ–≤</span>
            {setting.length === 0 && (
              <span className="text-xs text-muted-foreground">
                üí° –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—à–µ—à—å - —Ç–µ–º –ª—É—á—à–µ –ò–ò –ø–æ–π–º—ë—Ç —Ç–≤–æ—é –∑–∞–¥—É–º–∫—É
              </span>
            )}
          </div>
        </Card>

        {/* –í—ã–±–æ—Ä —Ä–æ–ª–∏ */}
        <Card className="p-6 space-y-4">
          <label className="text-sm font-medium">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å:</label>
          <div className="grid grid-cols-2 gap-4">
            <button
              onClick={() => setRole('author')}
              className={`relative p-8 rounded-lg border-2 transition-all hover:scale-105 ${
                role === 'author'
                  ? 'border-primary bg-primary/10'
                  : 'border-border hover:border-primary/50'
              }`}
            >
              <div className="text-center space-y-2">
                <Icon name="Pen" size={48} className="mx-auto" />
                <h3 className="text-2xl font-bold">–ê–í–¢–û–†</h3>
                <p className="text-sm text-muted-foreground">
                  –í–µ–¥–∏ –∏—Å—Ç–æ—Ä–∏—é, —É–ø—Ä–∞–≤–ª—è–π –º–∏—Ä–æ–º –∏ –ù–ü–°
                </p>
              </div>
              {role === 'author' && (
                <div className="absolute top-2 right-2">
                  <Icon name="Check" size={24} className="text-primary" />
                </div>
              )}
            </button>

            <button
              onClick={() => setRole('hero')}
              className={`relative p-8 rounded-lg border-2 transition-all hover:scale-105 ${
                role === 'hero'
                  ? 'border-primary bg-primary/10'
                  : 'border-border hover:border-primary/50'
              }`}
            >
              <div className="text-center space-y-2">
                <Icon name="Sword" size={48} className="mx-auto" />
                <h3 className="text-2xl font-bold">–ì–ï–†–û–ô</h3>
                <p className="text-sm text-muted-foreground">
                  –ò–≥—Ä–∞–π –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏
                </p>
              </div>
              {role === 'hero' && (
                <div className="absolute top-2 right-2">
                  <Icon name="Check" size={24} className="text-primary" />
                </div>
              )}
            </button>
          </div>
        </Card>

        {/* –í–∏–¥ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è */}
        <Card className="p-6 space-y-4">
          <label className="text-sm font-medium">–í–∏–¥ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è:</label>
          <div className="grid grid-cols-3 gap-3">
            <button
              onClick={() => setNarrativeMode('first')}
              className={`p-4 rounded-lg border-2 transition-all hover:scale-105 ${
                narrativeMode === 'first'
                  ? 'border-primary bg-primary/10'
                  : 'border-border hover:border-primary/50'
              }`}
            >
              <div className="text-center space-y-1">
                <Icon name="User" size={32} className="mx-auto" />
                <h4 className="font-semibold">–û—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞</h4>
                <p className="text-xs text-muted-foreground">–Ø –≤–∏–∂—É, —è –¥–µ–ª–∞—é</p>
              </div>
            </button>

            <button
              onClick={() => setNarrativeMode('third')}
              className={`p-4 rounded-lg border-2 transition-all hover:scale-105 ${
                narrativeMode === 'third'
                  ? 'border-primary bg-primary/10'
                  : 'border-border hover:border-primary/50'
              }`}
            >
              <div className="text-center space-y-1">
                <Icon name="Users" size={32} className="mx-auto" />
                <h4 className="font-semibold">–û—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –ª–∏—Ü–∞</h4>
                <p className="text-xs text-muted-foreground">–û–Ω/–æ–Ω–∞ –≤–∏–¥–∏—Ç, –¥–µ–ª–∞–µ—Ç</p>
              </div>
            </button>

            <button
              onClick={() => setNarrativeMode('love-interest')}
              className={`p-4 rounded-lg border-2 transition-all hover:scale-105 ${
                narrativeMode === 'love-interest'
                  ? 'border-primary bg-primary/10'
                  : 'border-border hover:border-primary/50'
              }`}
            >
              <div className="text-center space-y-1">
                <Icon name="Heart" size={32} className="mx-auto" />
                <h4 className="font-semibold">–° –∏–Ω—Ç–µ—Ä–µ—Å–æ–º</h4>
                <p className="text-xs text-muted-foreground">–í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –æ—Ç –ª—é–±–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞</p>
              </div>
            </button>
          </div>
        </Card>

        {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ */}
        <Card className="p-6 space-y-4">
          <label className="text-sm font-medium">
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤: {playerCount} {playerCount === 1 ? '(—Å–æ–ª–æ)' : `(—Å —É—á—ë—Ç–æ–º –∞–≤—Ç–æ—Ä–∞)`}
          </label>
          <div className="px-2">
            <Slider
              value={[playerCount]}
              onValueChange={(value) => setPlayerCount(value[0])}
              min={1}
              max={6}
              step={1}
              className="w-full"
            />
            <div className="flex justify-between text-xs text-muted-foreground mt-2">
              <span>1</span>
              <span>2</span>
              <span>3</span>
              <span>4</span>
              <span>5</span>
              <span>6</span>
            </div>
          </div>
        </Card>

        {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ */}
        <Card className="p-6 bg-gradient-to-r from-primary/20 to-primary/10 border-primary/50">
          <Button
            size="lg"
            onClick={handleStart}
            className="w-full h-16 text-xl gap-3 shadow-lg hover:shadow-xl transition-all"
          >
            <Icon name="Swords" size={24} />
            –ù–ê–ß–ê–¢–¨ –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï
          </Button>
        </Card>

        <div className="text-center">
          <Button variant="ghost" onClick={() => navigate('/')}>
            <Icon name="ArrowLeft" size={16} className="mr-2" />
            –ù–∞–∑–∞–¥
          </Button>
        </div>
      </div>
    </div>
  );
};

export default CreateGame;